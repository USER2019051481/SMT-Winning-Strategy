
normal rule
N-formula:	 Not(v0%27 == 0)
time cost:	 33.87733197212219
strategies:	 [(v0%27 == 1, 'take', 1), (v0%27 == 2, 'take', 2), (v0%27 == 3, 'take', 3), (v0%27 == 4, 'take', 4), (v0%27 == 5, 'take', 5), (v0%27 == 6, 'take', 6), (v0%27 == 7, 'take', 7), (v0%27 == 8, 'take', 8), (v0%27 == 9, 'take', 9), (v0%27 == 10, 'take', 10), (v0%27 == 11, 'take', 11), (v0%27 == 12, 'take', 12), (v0%27 == 13, 'take', 13), (v0%27 == 14, 'take', 14), (v0%27 == 15, 'take', 15), (v0%27 == 16, 'take', 16), (v0%27 == 17, 'take', 17), (v0%27 == 18, 'take', 18), (v0%27 == 19, 'take', 19), (v0%27 == 20, 'take', 20), (v0%27 == 21, 'take', 21), (v0%27 == 22, 'take', 22), (v0%27 == 23, 'take', 23), (v0%27 == 24, 'take', 24), (v0%27 == 25, 'take', 25), (v0%27 == 26, 'take', 26)]
time cost:	 47.932934284210205

normal rule
N-formula:	 Not(v0%27 == 0)
time cost:	 22.912535190582275
strategies:	 [(v0%27 == 1, 'take', 1), (v0%27 == 2, 'take', 2), (v0%27 == 3, 'take', 3), (v0%27 == 4, 'take', 4), (v0%27 == 5, 'take', 5), (v0%27 == 6, 'take', 6), (v0%27 == 7, 'take', 7), (v0%27 == 8, 'take', 8), (v0%27 == 9, 'take', 9), (v0%27 == 10, 'take', 10), (v0%27 == 11, 'take', 11), (v0%27 == 12, 'take', 12), (v0%27 == 13, 'take', 13), (v0%27 == 14, 'take', 14), (v0%27 == 15, 'take', 15), (v0%27 == 16, 'take', 16), (v0%27 == 17, 'take', 17), (v0%27 == 18, 'take', 18), (v0%27 == 19, 'take', 19), (v0%27 == 20, 'take', 20), (v0%27 == 21, 'take', 21), (v0%27 == 22, 'take', 22), (v0%27 == 23, 'take', 23), (v0%27 == 24, 'take', 24), (v0%27 == 25, 'take', 25), (v0%27 == 26, 'take', 26)]
time cost:	 32.06405568122864

normal rule
N-formula:	 Not(v0%27 == 0)
time cost:	 33.96271014213562
strategies:	 [(v0%27 == 1, 'take', 1), (v0%27 == 2, 'take', 2), (v0%27 == 3, 'take', 3), (v0%27 == 4, 'take', 4), (v0%27 == 5, 'take', 5), (v0%27 == 6, 'take', 6), (v0%27 == 7, 'take', 7), (v0%27 == 8, 'take', 8), (v0%27 == 9, 'take', 9), (v0%27 == 10, 'take', 10), (v0%27 == 11, 'take', 11), (v0%27 == 12, 'take', 12), (v0%27 == 13, 'take', 13), (v0%27 == 14, 'take', 14), (v0%27 == 15, 'take', 15), (v0%27 == 16, 'take', 16), (v0%27 == 17, 'take', 17), (v0%27 == 18, 'take', 18), (v0%27 == 19, 'take', 19), (v0%27 == 20, 'take', 20), (v0%27 == 21, 'take', 21), (v0%27 == 22, 'take', 22), (v0%27 == 23, 'take', 23), (v0%27 == 24, 'take', 24), (v0%27 == 25, 'take', 25), (v0%27 == 26, 'take', 26)]
time cost:	 47.45426869392395

normal rule
N-formula:	 Not(v0%27 == 0)
time cost:	 33.29452443122864
strategies:	 [(v0%27 == 1, 'take', 1), (v0%27 == 2, 'take', 2), (v0%27 == 3, 'take', 3), (v0%27 == 4, 'take', 4), (v0%27 == 5, 'take', 5), (v0%27 == 6, 'take', 6), (v0%27 == 7, 'take', 7), (v0%27 == 8, 'take', 8), (v0%27 == 9, 'take', 9), (v0%27 == 10, 'take', 10), (v0%27 == 11, 'take', 11), (v0%27 == 12, 'take', 12), (v0%27 == 13, 'take', 13), (v0%27 == 14, 'take', 14), (v0%27 == 15, 'take', 15), (v0%27 == 16, 'take', 16), (v0%27 == 17, 'take', 17), (v0%27 == 18, 'take', 18), (v0%27 == 19, 'take', 19), (v0%27 == 20, 'take', 20), (v0%27 == 21, 'take', 21), (v0%27 == 22, 'take', 22), (v0%27 == 23, 'take', 23), (v0%27 == 24, 'take', 24), (v0%27 == 25, 'take', 25), (v0%27 == 26, 'take', 26)]
time cost:	 43.370004177093506

normal rule
N-formula:	 Not(v0%27 == 0)
time cost:	 23.912999629974365
strategies:	 [(v0%27 == 1, 'take', 1), (v0%27 == 2, 'take', 2), (v0%27 == 3, 'take', 3), (v0%27 == 4, 'take', 4), (v0%27 == 5, 'take', 5), (v0%27 == 6, 'take', 6), (v0%27 == 7, 'take', 7), (v0%27 == 8, 'take', 8), (v0%27 == 9, 'take', 9), (v0%27 == 10, 'take', 10), (v0%27 == 11, 'take', 11), (v0%27 == 12, 'take', 12), (v0%27 == 13, 'take', 13), (v0%27 == 14, 'take', 14), (v0%27 == 15, 'take', 15), (v0%27 == 16, 'take', 16), (v0%27 == 17, 'take', 17), (v0%27 == 18, 'take', 18), (v0%27 == 19, 'take', 19), (v0%27 == 20, 'take', 20), (v0%27 == 21, 'take', 21), (v0%27 == 22, 'take', 22), (v0%27 == 23, 'take', 23), (v0%27 == 24, 'take', 24), (v0%27 == 25, 'take', 25), (v0%27 == 26, 'take', 26)]
time cost:	 33.47778058052063

normal rule
N-formula:	 And(Not(v0 == 0), Not((3*v0)%5 == 1))
time cost:	 21.668221473693848
strategies:	 [(And(Not(v0 <= 0), (3*v0)%5 == 0), 'take', v0), (And(Not(v0 <= 0), (3*v0)%5 == 2), 'take', v0), (And(Not(v0 <= 0), (3*v0)%5 == 3), 'take', v0), (And(Not(v0 <= 0), (3*v0)%5 == 4), 'take', v0)]
time cost:	 23.066063165664673

normal rule
N-formula:	 Not(v0%27 == 0)
time cost:	 6.078886270523071
strategies:	 [(v0%27 == 1, 'take', 1), (v0%27 == 2, 'take', 2), (v0%27 == 3, 'take', 3), (v0%27 == 4, 'take', 4), (v0%27 == 5, 'take', 5), (v0%27 == 6, 'take', 6), (v0%27 == 7, 'take', 7), (v0%27 == 8, 'take', 8), (v0%27 == 9, 'take', 9), (v0%27 == 10, 'take', 10), (v0%27 == 11, 'take', 11), (v0%27 == 12, 'take', 12), (v0%27 == 13, 'take', 13), (v0%27 == 14, 'take', 14), (v0%27 == 15, 'take', 15), (v0%27 == 16, 'take', 16), (v0%27 == 17, 'take', 17), (v0%27 == 18, 'take', 18), (v0%27 == 19, 'take', 19), (v0%27 == 20, 'take', 20), (v0%27 == 21, 'take', 21), (v0%27 == 22, 'take', 22), (v0%27 == 23, 'take', 23), (v0%27 == 24, 'take', 24), (v0%27 == 25, 'take', 25), (v0%27 == 26, 'take', 26)]
time cost:	 14.359401226043701

normal rule
N-formula:	 Not(v0%27 == 0)
time cost:	 28.736156225204468
strategies:	 [(v0%27 == 1, 'take', 1), (v0%27 == 2, 'take', 2), (v0%27 == 3, 'take', 3), (v0%27 == 4, 'take', 4), (v0%27 == 5, 'take', 5), (v0%27 == 6, 'take', 6), (v0%27 == 7, 'take', 7), (v0%27 == 8, 'take', 8), (v0%27 == 9, 'take', 9), (v0%27 == 10, 'take', 10), (v0%27 == 11, 'take', 11), (v0%27 == 12, 'take', 12), (v0%27 == 13, 'take', 13), (v0%27 == 14, 'take', 14), (v0%27 == 15, 'take', 15), (v0%27 == 16, 'take', 16), (v0%27 == 17, 'take', 17), (v0%27 == 18, 'take', 18), (v0%27 == 19, 'take', 19), (v0%27 == 20, 'take', 20), (v0%27 == 21, 'take', 21), (v0%27 == 22, 'take', 22), (v0%27 == 23, 'take', 23), (v0%27 == 24, 'take', 24), (v0%27 == 25, 'take', 25), (v0%27 == 26, 'take', 26)]
time cost:	 39.49262833595276

normal rule
N-formula:	 Not(v0%27 == 0)
time cost:	 26.15453791618347
strategies:	 [(v0%27 == 1, 'take', 1), (v0%27 == 2, 'take', 2), (v0%27 == 3, 'take', 3), (v0%27 == 4, 'take', 4), (v0%27 == 5, 'take', 5), (v0%27 == 6, 'take', 6), (v0%27 == 7, 'take', 7), (v0%27 == 8, 'take', 8), (v0%27 == 9, 'take', 9), (v0%27 == 10, 'take', 10), (v0%27 == 11, 'take', 11), (v0%27 == 12, 'take', 12), (v0%27 == 13, 'take', 13), (v0%27 == 14, 'take', 14), (v0%27 == 15, 'take', 15), (v0%27 == 16, 'take', 16), (v0%27 == 17, 'take', 17), (v0%27 == 18, 'take', 18), (v0%27 == 19, 'take', 19), (v0%27 == 20, 'take', 20), (v0%27 == 21, 'take', 21), (v0%27 == 22, 'take', 22), (v0%27 == 23, 'take', 23), (v0%27 == 24, 'take', 24), (v0%27 == 25, 'take', 25), (v0%27 == 26, 'take', 26)]
time cost:	 35.09637689590454
